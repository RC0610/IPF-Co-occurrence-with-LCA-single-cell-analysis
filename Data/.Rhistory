library(Seurat)
library(tidyverse)
library(dplyr)
library(patchwork)
library(harmony)
library(data.table)
library(monocle)
"\n\n=== QC THRESHOLDS APPLIED ===",
"\n\n=== QC THRESHOLDS APPLIED ==="
capture.output(kable(data.frame(
Parameter = c("Genes/Cell", "UMIs/Cell", "MT%", "HB%"),
Min = c(QC_THRESHOLDS$nFeature_RNA[1],
QC_THRESHOLDS$nCount_RNA[1],
NA, NA),
Max = c(QC_THRESHOLDS$nFeature_RNA[2],
QC_THRESHOLDS$nCount_RNA[2],
QC_THRESHOLDS$percent_mt,
QC_THRESHOLDS$percent_hb)
), align = 'c'))),
capture.output(kable(data.frame(
Parameter = c("Genes/Cell", "UMIs/Cell", "MT%", "HB%"),
Min = c(QC_THRESHOLDS$nFeature_RNA[1],
QC_THRESHOLDS$nCount_RNA[1],
NA, NA),
Max = c(QC_THRESHOLDS$nFeature_RNA[2],
QC_THRESHOLDS$nCount_RNA[2],
QC_THRESHOLDS$percent_mt,
QC_THRESHOLDS$percent_hb)
), align = 'c')),
capture.output(kable(data.frame(
Parameter = c("Genes/Cell", "UMIs/Cell", "MT%", "HB%"),
Min = c(QC_THRESHOLDS$nFeature_RNA[1],
QC_THRESHOLDS$nCount_RNA[1],
NA, NA),
Max = c(QC_THRESHOLDS$nFeature_RNA[2],
QC_THRESHOLDS$nCount_RNA[2],
QC_THRESHOLDS$percent_mt,
QC_THRESHOLDS$percent_hb)
), align = 'c')),
capture.output(kable(data.frame(
Parameter = c("Genes/Cell", "UMIs/Cell", "MT%", "HB%"),
Min = c(QC_THRESHOLDS$nFeature_RNA[1],
QC_THRESHOLDS$nCount_RNA[1],
NA, NA),
Max = c(QC_THRESHOLDS$nFeature_RNA[2],
QC_THRESHOLDS$nCount_RNA[2],
QC_THRESHOLDS$percent_mt,
QC_THRESHOLDS$percent_hb)
), align = 'c')),
capture.output(kable(data.frame(
Parameter = c("Genes/Cell", "UMIs/Cell", "MT%", "HB%"),
Min = c(QC_THRESHOLDS$nFeature_RNA[1],
QC_THRESHOLDS$nCount_RNA[1],
NA, NA),
Max = c(QC_THRESHOLDS$nFeature_RNA[2],
QC_THRESHOLDS$nCount_RNA[2],
QC_THRESHOLDS$percent_mt,
QC_THRESHOLDS$percent_hb)
), align = 'c'))
"\n\n=== BATCH DISTRIBUTION ===",
"\n\n=== BATCH DISTRIBUTION ==="
"\n*By Dataset*",
"\n*By Dataset*",
"\n\n=== BATCH DISTRIBUTION ==="
"\n*By Dataset*",
"\n*By Dataset*"
capture.output(kable(addmargins(table(scRNA$orig.ident)),
col.names = c("Dataset", "Cells"))),
capture.output(kable(addmargins(table(scRNA$orig.ident)),
col.names = c("Dataset", "Cells")))
"\n\n*By Sample (Detailed)*"，
"\n\n*By Sample (Detailed)*"
capture.output(kable(batch_stats, digits = 0))
"=== IPF QUALITY CONTROL REPORT ===",
"=== IPF QUALITY CONTROL REPORT ===",
"=== IPF QUALITY CONTROL REPORT ===",
"=== IPF QUALITY CONTROL REPORT ==="
paste0("\nGenerated: ", format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z")),
paste0("\nGenerated: ", format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"))
paste0("\nInitial cells: ", ncol_original),
paste0("\nGenerated: ", format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"))
paste0("\nInitial cells: ", ncol_original)
paste0("\nRetained cells: ", ncol(scRNA), " (",
round(ncol(scRNA)/ncol_original*100, 1), "%)"),
paste0("\nRetained cells: ", ncol(scRNA), " (",
round(ncol(scRNA)/ncol_original*100, 1), "%)")
"=== IPF QUALITY CONTROL REPORT ==="
paste0("\nGenerated: ", format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"))
paste0("\nInitial cells: ", ncol_original)
paste0("\nRetained cells: ", ncol(scRNA), " (",
round(ncol(scRNA)/ncol_original*100, 1), "%)")
#### 13. 生成质控报告 ####
batch_stats <- as.data.frame.matrix(table(
Dataset = scRNA$orig.ident,
Sample = scRNA$sample_id
))
qc_report <- paste(
paste0("\nGenerated: ", format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"))
paste0("\nInitial cells: ", ncol_original)
paste0("\nRetained cells: ", ncol(scRNA), " (",
round(ncol(scRNA)/ncol_original*100, 1), "%)")
"\n\n=== QC THRESHOLDS APPLIED ==="
capture.output(kable(data.frame(
Parameter = c("Genes/Cell", "UMIs/Cell", "MT%", "HB%"),
Min = c(QC_THRESHOLDS$nFeature_RNA[1],
QC_THRESHOLDS$nCount_RNA[1],
NA, NA),
Max = c(QC_THRESHOLDS$nFeature_RNA[2],
QC_THRESHOLDS$nCount_RNA[2],
QC_THRESHOLDS$percent_mt,
QC_THRESHOLDS$percent_hb)
), align = 'c'))
"\n\n=== BATCH DISTRIBUTION ==="
"\n*By Dataset*"
capture.output(kable(addmargins(table(scRNA$orig.ident)),
col.names = c("Dataset", "Cells")))
"\n\n*By Sample (Detailed)*"
capture.output(kable(batch_stats, digits = 0))
#### 13. 生成质控报告 ####
batch_stats <- as.data.frame.matrix(table(
Dataset = scRNA$orig.ident,
Sample = scRNA$sample_id
))
qc_report <- paste(
paste0("\nGenerated: ", format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"))
paste0("\nInitial cells: ", ncol_original)
paste0("\nRetained cells: ", ncol(scRNA), " (",
round(ncol(scRNA)/ncol_original*100, 1), "%)")
setwd("H:\生信\IPF-Co-occurrence-with-LCA-single-cell-analysis\Data")
setwd("H:/生信/IPF-Co-occurrence-with-LCA-single-cell-analysis/Data")
load("scRNA.CA.RDS")
library(Seurat)
library(tidyverse)
library(patchwork)
load("scRNA.CA.RDS")
scRNA=readRDS("scRNA_CA_QC_Harmony_processed.RDS")
scRNA1=readRDS("scRNA.CA.RDS")
View(scRNA)
View(scRNA1)
scRNA3=readRDS("scRNA.IPF.RDS")
scRNA4=readRDS("scRNA_IPF_QC_Harmony_processed.RDS")
View(scRNA3)
View(scRNA4)
